{"_id":"run-auto","_rev":"18-3280df4102734564084ec1199dfb7f61","name":"run-auto","description":"Determine the best order for running async functions, and run them","dist-tags":{"latest":"1.1.3"},"versions":{"0.1.0":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"0.1.0","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{},"devDependencies":{"tape":"^2.12.3"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/9..latest","chrome/25..latest","chrome/canary","firefox/20..latest","firefox/nightly","safari/6..latest","opera/12..latest","opera/next","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"_id":"run-auto@0.1.0","dist":{"shasum":"d2bda9277928d29e3d2ff681ed8c0e5b79e3df1a","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-0.1.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"directories":{}},"1.0.0":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"1.0.0","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{},"devDependencies":{"tape":"^2.12.3"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/9..latest","chrome/25..latest","chrome/canary","firefox/20..latest","firefox/nightly","safari/6..latest","opera/12..latest","opera/next","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"_id":"run-auto@1.0.0","dist":{"shasum":"bfcf0ee04252c044aa06f88e8363ea08d6d8901f","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-1.0.0.tgz"},"_from":".","_npmVersion":"1.4.3","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"directories":{}},"1.1.0":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"1.1.0","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{"dezalgo":"^1.0.1"},"devDependencies":{"standard":"^3.2.0","tape":"^3.5.0"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"standard && tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/9..latest","chrome/25..latest","chrome/canary","firefox/20..latest","firefox/nightly","safari/6..latest","opera/12..latest","opera/next","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"09537b3edcea50361528fdf4cd2752608d955444","_id":"run-auto@1.1.0","_shasum":"d0ad67caa158091d25cee14da38c5e716144b906","_from":".","_npmVersion":"2.7.0","_nodeVersion":"1.5.1","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"dist":{"shasum":"d0ad67caa158091d25cee14da38c5e716144b906","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-1.1.0.tgz"},"directories":{}},"1.1.1":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"1.1.1","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{"dezalgo":"^1.0.1"},"devDependencies":{"standard":"^3.2.0","tape":"^3.5.0"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"standard && tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/9..latest","chrome/25..latest","chrome/canary","firefox/20..latest","firefox/nightly","safari/6..latest","opera/12..latest","opera/next","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"c3772d04a65faef8a60a1073ce00a4599ee4ca46","_id":"run-auto@1.1.1","_shasum":"62cef9f229fd3e5360b39a8fc890c371d05cc464","_from":".","_npmVersion":"2.7.1","_nodeVersion":"1.6.1","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"dist":{"shasum":"62cef9f229fd3e5360b39a8fc890c371d05cc464","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-1.1.1.tgz"},"directories":{}},"1.1.2":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"1.1.2","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{"dezalgo":"^1.0.1"},"devDependencies":{"standard":"^3.2.0","tape":"^4.0.0"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"standard && tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/9..latest","chrome/25..latest","chrome/canary","firefox/20..latest","firefox/nightly","safari/6..latest","opera/12..latest","opera/next","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"b1e77f05da0d8fe62c07b8015dc57c24a873a2c6","_id":"run-auto@1.1.2","_shasum":"1c05aef58b8821e1925113889dad96831d53e688","_from":".","_npmVersion":"2.7.4","_nodeVersion":"0.12.2","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"dist":{"shasum":"1c05aef58b8821e1925113889dad96831d53e688","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-1.1.2.tgz"},"directories":{}},"1.1.3":{"name":"run-auto","description":"Determine the best order for running async functions, and run them","version":"1.1.3","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"dependencies":{"dezalgo":"^1.0.1"},"devDependencies":{"standard":"^4.3.2","tape":"^4.0.0","zuul":"^3.1.0"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"license":"MIT","main":"index.js","repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"scripts":{"test":"standard && npm run test-node && npm run test-browser","test-browser":"zuul -- test/*.js","test-browser-local":"zuul --local -- test/*.js","test-node":"tape test/*.js"},"gitHead":"c8e8035146db6a4d526db67297b8552c734aab5a","_id":"run-auto@1.1.3","_shasum":"c2d5163fec1ab78b6345cdd3992fce032f671f88","_from":".","_npmVersion":"2.11.3","_nodeVersion":"2.3.1","_npmUser":{"name":"feross","email":"feross@feross.org"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"dist":{"shasum":"c2d5163fec1ab78b6345cdd3992fce032f671f88","tarball":"http://registry.npmjs.org/run-auto/-/run-auto-1.1.3.tgz"},"directories":{}}},"readme":"# run-auto [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/run-auto.svg?style=flat\n[travis-url]: https://travis-ci.org/feross/run-auto\n[npm-image]: https://img.shields.io/npm/v/run-auto.svg?style=flat\n[npm-url]: https://npmjs.org/package/run-auto\n[downloads-image]: https://img.shields.io/npm/dm/run-auto.svg?style=flat\n[downloads-url]: https://npmjs.org/package/run-auto\n\n#### Determine the best order for running async functions, ***LIKE MAGIC!***\n\n![auto](https://raw.githubusercontent.com/feross/run-auto/master/img.png) [![Sauce Test Status](https://saucelabs.com/browser-matrix/run-auto.svg)](https://saucelabs.com/u/run-auto)\n\n### install\n\n```\nnpm install run-auto\n```\n\n### usage\n\n#### auto(tasks, [callback])\n\nDetermines the best order for running the functions in `tasks`, based on their\nrequirements. Each function can optionally depend on other functions being completed\nfirst, and each function is run as soon as its requirements are satisfied.\n\nIf any of the functions pass an error to their callback, it will not complete (so any\nother functions depending on it will not run), and the main `callback` is immediately\ncalled with the error. Functions also receive an object containing the results of\nfunctions which have completed so far.\n\nFor a complicated series of async tasks, using `auto` makes adding new tasks much easier\n(and the code more readable).\n\n##### arguments\n\n- `tasks` - An object. Each of its properties is either a function or an array of\nrequirements, with the function itself the last item in the array. The object's key of a property serves as the name of the task defined by that property, i.e. can be used when specifying requirements for other tasks. The function receives two arguments:\n(1) a `callback(err, result)` which must be called when finished, passing an `error`\n(which can be `null`) and the result of the function's execution, and (2) a `results`\nobject, containing the results of the previously executed functions.\n- `callback(err, results)` - An optional callback which is called when all the tasks have\nbeen completed. It receives the `err` argument if any tasks pass an error to their\ncallback. Results are always returned; however, if an error occurs, no further tasks will\nbe performed, and the results object will only contain partial results.\n\n##### example\n\n```js\nvar auto = require('run-auto')\n\nauto({\n  getData: function (callback) {\n    console.log('in getData')\n    // async code to get some data\n    callback(null, 'data', 'converted to array')\n  },\n  makeFolder: function (callback) {\n    console.log('in makeFolder')\n    // async code to create a directory to store a file in\n    // this is run at the same time as getting the data\n    callback(null, 'folder')\n  },\n  writeFile: ['getData', 'makeFolder', function (callback, results) {\n    console.log('in writeFile', JSON.stringify(results))\n    // once there is some data and the directory exists,\n    // write the data to a file in the directory\n    callback(null, 'filename')\n  }],\n  emailLink: ['writeFile', function (callback, results) {\n    console.log('in emailLink', JSON.stringify(results))\n    // once the file is written let's email a link to it...\n    // results.writeFile contains the filename returned by writeFile.\n    callback(null, { file: results.writeFile, email: 'user@example.com' })\n  }]\n}, function(err, results) {\n  console.log('err = ', err)\n  console.log('results = ', results)\n})\n```\n\n#### usage note\n\nNote, all functions are called with a `results` object as a second argument, so it is\nunsafe to pass functions in the` tasks` object which cannot handle the extra argument.\n\nFor example, this snippet of code:\n\n```js\nauto({\n  readData: async.apply(fs.readFile, 'data.txt', 'utf-8')\n}, callback)\n```\n\nwill have the effect of calling `readFile` with the results object as the last argument,\nwhich will fail, like this:\n\n```js\nfs.readFile('data.txt', 'utf-8', cb, {})\n```\n\nInstead, wrap the call to `readFile` in a function which does not forward the `results`\nobject:\n\n```js\nauto({\n  readData: function (cb, results) {\n    fs.readFile('data.txt', 'utf-8', cb)\n  }\n}, callback)\n```\n\nThis module is basically equavalent to\n[`async.auto`](https://github.com/caolan/async#autotasks-callback), but it's\nhandy to just have the one function you need instead of the kitchen sink. Modularity!\nEspecially handy if you're serving to the browser and need to reduce your javascript\nbundle size.\n\nWorks great in the browser with [browserify](http://browserify.org/)!\n\n### see also\n\n- [run-parallel](https://github.com/feross/run-parallel)\n- [run-parallel-limit](https://github.com/feross/run-parallel-limit)\n- [run-series](https://github.com/feross/run-series)\n- [run-waterfall](https://github.com/feross/run-waterfall)\n\n### license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n\nImage credit: Wizard Hat designed by Andrew Fortnum\n","maintainers":[{"name":"feross","email":"feross@feross.org"}],"time":{"modified":"2015-06-24T07:43:43.709Z","created":"2014-04-14T02:39:42.879Z","0.1.0":"2014-04-14T02:39:42.879Z","1.0.0":"2014-04-29T10:20:58.519Z","1.1.0":"2015-03-20T00:49:32.489Z","1.1.1":"2015-03-23T22:00:58.599Z","1.1.2":"2015-05-05T00:54:57.102Z","1.1.3":"2015-06-24T07:43:43.709Z"},"homepage":"https://github.com/feross/run-auto","keywords":["auto","async","function","callback","asynchronous","run","array","run auto","order","async.auto"],"repository":{"type":"git","url":"git://github.com/feross/run-auto.git"},"author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/run-auto/issues"},"license":"MIT","readmeFilename":"README.md","users":{"feross":true,"tyandell":true,"bret":true,"koulmomo":true},"_attachments":{},"_etag":"\"5AT2FHCQ5YJM5MPR97BJFVEMA\""}